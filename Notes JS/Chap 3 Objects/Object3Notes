
const x = person;  // Will not create a copy of person.

The object x is not a copy of person. It is person. Both x and person are the same object.

Any changes to x will also change person, because x and person are the same object.
 Any changes to person will also change x, because x and person are the same object.

 The delete keyword deletes both the value of the property and the property itself.

 The delete operator is designed to be used on object properties. It has no effect on variables or functions.

 In JavaScript, the this keyword refers to an object.

 Which object depends on how this is being invoked (used or called).

 this is not a variable. It is a keyword. You cannot change the value of this.

 Some common solutions to display JavaScript objects are:

     Displaying the Object Properties by name
     Displaying the Object Properties in a Loop
     Displaying the Object using Object.values()
     Displaying the Object using JSON.stringify()

Any JavaScript object can be converted to an array using Object.values():

Any JavaScript object can be stringified (converted to a string) with the JavaScript function JSON.stringify():

Functions inside the objects is called as "Methods

// call() and apply() methods
// call() and apply() methods are used to invoke the function directly by passing the object as an argument

